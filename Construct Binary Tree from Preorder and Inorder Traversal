/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* helper(vector<int>& preorder, vector<int>& inorder, int s, int e, int &index){
        if(s>e) 
            return NULL;
        
        int temp=preorder[index];
        int i=s;
        for(;i<=e;i++){
            if(inorder[i] == temp)
                break;
        }
        index++;

        TreeNode* root=new TreeNode(temp);

        root->left = helper(preorder, inorder, s, i-1, index);
        root->right = helper(preorder, inorder, i+1, e, index);

        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int result=0;
        return helper(preorder,inorder,0,preorder.size()-1,result);
    }
};
