/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        ListNode*head=new ListNode(-1);
        if(lists.size()==0) return head->next;
        vector<int>arr;
        for ( int i=0;i<lists.size();i++ ) {
            ListNode* temp=lists[i];
            while(temp!=NULL){
                arr.push_back(temp->val);
                temp=temp->next;
            }
        }
        sort(arr.begin(),arr.end());
        
        ListNode*tail=head;
        for(int i=0;i<arr.size();i++) {
            ListNode*copy=new ListNode(arr[i]);
            tail->next=copy;
            tail=tail->next;
        }
        return head->next;      
    }
};
//TC=O(NlogN)
//SC=O(N)


















